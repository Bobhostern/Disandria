#ifndef DISANDRIA_MAPTILE_H
#define DISANDRIA_MAPTILE_H

/*
 * MapTile.h
 * This file is part of Disandria
 *
 * Copyright (C) 2013 - Bob Hostern
 *
 * Disandria is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * Disandria is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Disandria. If not, see <http://www.gnu.org/licenses/>.
 */



#include "Actor.h"
#include <SFML/Graphics.hpp>

class MapTile
{
public:
	/**
	 * @brief Create a MapTile
	 * @param im The image of the tile
	 * @param wd Width of the tile
	 * @param ht Height of the tile
	 * 
	 * Creates a MapTile, which renders a single tile on a Map.
	 */
    MapTile(sf::Image* im, unsigned int wd, unsigned int ht);
    
    /**
     * @brief Create an Actor
     * @param Actor to render
     * 
     * Adds an Actor to this MapTile to render it
     * Set to no Actor by sending in NULL.
     */
    void renderActor(Actor* act);
    
    /**
     * @brief Check if Actor is on MapTile
     * 
     * Checks if an actor is on this MapTile.
     */
    bool hasActor();
    
    /**
     * @brief Render the MapTile
     * 
     * Renders the MapTile to an Image
     */
    sf::Image* renderTile();
    
    /**
     * @brief Cleans up a MapTile
     * 
     * Cleans up a MapTile, so that it isn't using the memory need for the baking of your pizza.
     */
    ~MapTile();
private:

	/**
	 * @brief MapTile base image holder
	 * 
	 * Holds the image used to create this MapTile.
	 */
    sf::Image* tileImg;
    
    /**
     * @brief Holds the Actor to be rendered on this MapTile
     * 
     * This holds the actor that is to be rendered on this MapTile.
     */
    Actor* actorOnTile;
    
    /**
     * @brief Generated image
     * 
     * Holds the image that was generated by this MapTile
     */
    sf::Image* createdImage;
    
    /**
     * @brief Image width
     * 
     * How fat is the image?
     */
    unsigned int width;
    
    /**
     * @brief Image height
     * 
     * How tall is the image?
     */
    unsigned int height;
};

#endif // DISANDRIA_MAPTILE_H
